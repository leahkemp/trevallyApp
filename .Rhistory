shiny::runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
library(leaflet.extras)
library(leaflet.extras)
install.packages(leaflet.extras)
install.packages("leaflet.extras")
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
install.packages("shinydashboard")
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
install.packages("networkD3")
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
install.packages("xlsx")
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
runApp('C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp')
sampling_data <- read.csv("Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "cp1252")
setwd
getwd()
setwd("C:\Users\User\OneDrive - Victoria University of Wellington - STAFF\Notebooks\VUW material\2018\Thesis\Thesis\welly-trevally\trevallyApp")
setwd("C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp")
runApp()
sampling_data <- read.csv("Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "cp1252")
View(sampling_data)
runApp()
sampling_data <- read.csv("../Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
sampling_data <- read.csv("../Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
sampling_data <- read.csv("Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
sampling_data$location.latitude <- as.double(sampling_data$location.latitude)
sampling_data$location.longitude <- as.double(sampling_data$location.longitude)
setwd("C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp")
sampling_data <- read.csv("Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
sampling_data$location.latitude <- as.double(sampling_data$location.latitude)
sampling_data$location.longitude <- as.double(sampling_data$location.longitude)
sampling_data_control <- sampling_data %>%
dplyr::filter(control.successfully.sequenced == "Y") %>%
dplyr::group_by(season.caught, location.country, location.coordinate, location.latitude, location.longitude, radius, landing.date, subsample1, subsample2, subsample3) %>%
count()
sampling_data_control_winter <- sampling_data_control %>%
dplyr::filter(season.caught == "winter")
sampling_data_control_spring <- sampling_data_control %>%
dplyr::filter(season.caught == "spring")
sampling_data_control_summer <- sampling_data_control %>%
dplyr::filter(season.caught == "summer")
sampling_data_control_autumn <- sampling_data_control %>%
dplyr::filter(season.caught == "autumn")
setwd("C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/data")
setwd("C:/Users/User/OneDrive - Victoria University of Wellington - STAFF/Notebooks/VUW material/2018/Thesis/Thesis/welly-trevally/trevallyApp")
sampling_data <- read.csv("../data/Trevally.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
sampling_data$location.latitude <- as.double(sampling_data$location.latitude)
sampling_data$location.longitude <- as.double(sampling_data$location.longitude)
sampling_data_control <- sampling_data %>%
dplyr::filter(control.successfully.sequenced == "Y") %>%
dplyr::group_by(season.caught, location.country, location.coordinate, location.latitude, location.longitude, radius, landing.date, subsample1, subsample2, subsample3) %>%
count()
sampling_data_control_winter <- sampling_data_control %>%
dplyr::filter(season.caught == "winter")
sampling_data_control_spring <- sampling_data_control %>%
dplyr::filter(season.caught == "spring")
sampling_data_control_summer <- sampling_data_control %>%
dplyr::filter(season.caught == "summer")
sampling_data_control_autumn <- sampling_data_control %>%
dplyr::filter(season.caught == "autumn")
write.csv(sampling_data_control, "sampling_data_control.csv")
write.csv(sampling_data_control_winter, "sampling_data_control_winter.csv")
write.csv(sampling_data_control_spring, "sampling_data_control_spring.csv")
write.csv(sampling_data_control_summer, "sampling_data_control_summer.csv")
write.csv(sampling_data_control_autumn, "sampling_data_control_autumn.csv")
sampling_data_aus <- sampling_data_control %>%
dplyr::filter(location.country == "australia")
sampling_data_nz_1 <- sampling_data_control %>%
dplyr::filter(location.country == "new zealand", subsample1 == "Y")
sampling_data_nz_2 <- sampling_data_control %>%
dplyr::filter(location.country == "new zealand", subsample2 == "Y")
sampling_data_nz_3 <- sampling_data_control %>%
dplyr::filter(location.country == "new zealand", subsample3 == "Y")
write.csv(sampling_data_aus, "sampling_data_aus.csv")
write.csv(sampling_data_nz_1, "sampling_data_nz_1.csv")
write.csv(sampling_data_nz_2, "sampling_data_nz_2.csv")
write.csv(sampling_data_nz_3, "sampling_data_nz_3.csv")
sampling_data_coi <- sampling_data %>%
dplyr::filter(coi.successfully.sequenced == "Y" | coi.sequence.available == "Y") %>%
dplyr::group_by(species, location.coordinate, location.latitude, location.longitude, radius, landing.date) %>%
count()
sampling_data_coi_georgianus <- dplyr::filter(sampling_data_coi, species == "P. georgianus")
sampling_data_coi_wrighti <- dplyr::filter(sampling_data_coi, species == "P. wrighti")
sampling_data_coi_dentex <- dplyr::filter(sampling_data_coi, species == "P. dentex")
write.csv(sampling_data_coi, "sampling_data_coi.csv")
write.csv(sampling_data_coi_georgianus, "sampling_data_coi_georgianus.csv")
write.csv(sampling_data_coi_wrighti, "sampling_data_coi_wrighti.csv")
write.csv(sampling_data_coi_dentex, "sampling_data_coi_dentex.csv")
manage_group <- sampling_data %>%
dplyr::filter(control.successfully.sequenced=="Y") %>%
dplyr::group_by(location.qma, location.fma, location.stat.area, location.latitude, location.longitude) %>%
count()
write.csv(manage_group, "manage_group.csv")
View(manage_group)
